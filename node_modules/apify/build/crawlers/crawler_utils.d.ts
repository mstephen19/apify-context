/**
 * Handles timeout request
 * @param {Session} session
 * @param {string} errorMessage
 * @private
 */
export function handleRequestTimeout(session: Session, errorMessage: string): void;
/**
 * Handles blocked request
 * @param {Session} session
 * @param {number} statusCode
 * @private
 */
export function throwOnBlockedRequest(session: Session, statusCode: number): void;
/**
 * Merges multiple cookie strings. Keys are compared case-sensitively, warning will be logged
 * if we see two cookies with same keys but different casing.
 *
 * @param {string} url
 * @param {string[]} sourceCookies
 * @return {string}
 * @private
 */
export function mergeCookies(url: string, sourceCookies: string[]): string;
/**
 * @param {string} url
 * @param {string} [cookieString1='']
 * @param {string} [cookieString2='']
 * @return {string}
 * @private
 */
export function diffCookies(url: string, cookieString1?: string | undefined, cookieString2?: string | undefined): string;
import { Session } from "../session_pool/session";
//# sourceMappingURL=crawler_utils.d.ts.map