/**
 * Apify extends the launch options of Playwright.
 * You can use any of the Playwright compatible
 * [`LaunchOptions`](https://playwright.dev/docs/api/class-browsertype#browsertypelaunchoptions)
 * options by providing the `launchOptions` property.
 *
 * **Example:**
 * ```js
 * // launch a headless Chrome (not Chromium)
 * const launchContext = {
 *     // Apify helpers
 *     useChrome: true,
 *     proxyUrl: 'http://user:password@some.proxy.com'
 *     // Native Playwright options
 *     launchOptions: {
 *         headless: true,
 *         args: ['--some-flag'],
 *     }
 * }
 * ```
 *
 * @typedef PlaywrightLaunchContext
 * @property {LaunchOptions} [launchOptions]
 *  `browserType.launch` [options](https://playwright.dev/docs/api/class-browsertype?_highlight=launch#browsertypelaunchoptions)
 * @property {string} [proxyUrl]
 *   URL to a HTTP proxy server. It must define the port number,
 *   and it may also contain proxy username and password.
 *
 *   Example: `http://bob:pass123@proxy.example.com:1234`.
 * @property {boolean} [useChrome=false]
 *   If `true` and `executablePath` is not set,
 *   Playwright will launch full Google Chrome browser available on the machine
 *   rather than the bundled Chromium. The path to Chrome executable
 *   is taken from the `APIFY_CHROME_EXECUTABLE_PATH` environment variable if provided,
 *   or defaults to the typical Google Chrome executable location specific for the operating system.
 *   By default, this option is `false`.
 * @property {*} [launcher]
// @ts-ignore optional peer dependency
 *   By default this function uses `require("playwright").chromium`.
// @ts-ignore optional peer dependency
 *   If you want to use a different browser you can pass it by this property as e.g. `require("playwright").firefox`
 */
/**
 * `PlaywrightLauncher` is based on the `BrowserLauncher`. It launches `playwright` browser instance.
 * @ignore
 */
export class PlaywrightLauncher extends BrowserLauncher {
    static optionsShape: {
        launcher: import("ow").ObjectPredicate<object> & import("ow").BasePredicate<object | undefined>;
        proxyUrl: import("ow").StringPredicate & import("ow").BasePredicate<string | undefined>;
        useChrome: import("ow").BooleanPredicate & import("ow").BasePredicate<boolean | undefined>;
        useIncognitoPages: import("ow").BooleanPredicate & import("ow").BasePredicate<boolean | undefined>;
        userDataDir: import("ow").StringPredicate & import("ow").BasePredicate<string | undefined>;
        launchOptions: import("ow").ObjectPredicate<object> & import("ow").BasePredicate<object | undefined>;
    };
    /**
    * @param {PlaywrightLaunchContext} launchContext
    * All `PlaywrightLauncher` parameters are passed via this launchContext object.
    */
    constructor(launchContext?: PlaywrightLaunchContext);
}
export function launchPlaywright(launchContext?: PlaywrightLaunchContext | undefined): Promise<any>;
/**
 * Apify extends the launch options of Playwright.
 * You can use any of the Playwright compatible
 * [`LaunchOptions`](https://playwright.dev/docs/api/class-browsertype#browsertypelaunchoptions)
 * options by providing the `launchOptions` property.
 *
 * **Example:**
 * ```js
 * // launch a headless Chrome (not Chromium)
 * const launchContext = {
 *     // Apify helpers
 *     useChrome: true,
 *     proxyUrl: 'http://user:password@some.proxy.com'
 *     // Native Playwright options
 *     launchOptions: {
 *         headless: true,
 *         args: ['--some-flag'],
 *     }
 * }
 * ```
 */
export type PlaywrightLaunchContext = {
    /**
     * `browserType.launch` [options](https://playwright.dev/docs/api/class-browsertype?_highlight=launch#browsertypelaunchoptions)
     */
    launchOptions?: LaunchOptions | undefined;
    /**
     * URL to a HTTP proxy server. It must define the port number,
     * and it may also contain proxy username and password.
     *
     * Example: `http://bob:pass123@proxy.example.com:1234`.
     */
    proxyUrl?: string | undefined;
    /**
     * If `true` and `executablePath` is not set,
     * Playwright will launch full Google Chrome browser available on the machine
     * rather than the bundled Chromium. The path to Chrome executable
     * is taken from the `APIFY_CHROME_EXECUTABLE_PATH` environment variable if provided,
     * or defaults to the typical Google Chrome executable location specific for the operating system.
     * By default, this option is `false`.
     */
    useChrome?: boolean | undefined;
    /**
// @ts-ignore optional peer dependency
     * By default this function uses `require("playwright").chromium`.
// @ts-ignore optional peer dependency
     * If you want to use a different browser you can pass it by this property as e.g. `require("playwright").firefox`
     */
    launcher?: any;
};
import BrowserLauncher from "./browser_launcher";
import { LaunchOptions } from "playwright-core";
//# sourceMappingURL=playwright_launcher.d.ts.map