export function gotoExtended(page: Page, request: Request, gotoOptions?: DirectNavigationOptions | undefined): Promise<(Response | null)>;
export namespace playwrightUtils {
    export { gotoExtended };
}
export type DirectNavigationOptions = {
    /**
     * Maximum operation time in milliseconds, defaults to 30 seconds, pass `0` to disable timeout. The
     * default value can be changed by using the browserContext.setDefaultNavigationTimeout(timeout),
     * browserContext.setDefaultTimeout(timeout), page.setDefaultNavigationTimeout(timeout) or
     * page.setDefaultTimeout(timeout) methods.
     */
    timeout?: number | undefined;
    /**
     * When to consider operation succeeded, defaults to `load`. Events can be either:
     * - `'domcontentloaded'` - consider operation to be finished when the `DOMContentLoaded` event is fired.
     * - `'load'` - consider operation to be finished when the `load` event is fired.
     * - `'networkidle'` - consider operation to be finished when there are no network connections for at least `500` ms.
     */
    waitUntil?: "domcontentloaded" | "load" | "networkidle" | undefined;
    /**
     * Referer header value. If provided it will take preference over the referer header value set by page.setExtraHTTPHeaders(headers).
     */
    referer?: string | undefined;
};
import { Page } from "playwright-core";
import Request from "./request";
import { Response } from "playwright-core";
//# sourceMappingURL=playwright_utils.d.ts.map