"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestQueueCollectionClient = void 0;
const tslib_1 = require("tslib");
const fs_extra_1 = require("fs-extra");
const ow_1 = tslib_1.__importDefault(require("ow"));
const path_1 = require("path");
const request_queue_emulator_1 = require("../emulators/request_queue_emulator");
const utils_1 = require("../utils");
/**
 * Request queue collection client.
 */
class RequestQueueCollectionClient {
    constructor({ storageDir, dbConnections }) {
        Object.defineProperty(this, "storageDir", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "dbConnections", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.storageDir = storageDir;
        this.dbConnections = dbConnections;
    }
    async list() {
        throw new Error('This method is not implemented in @apify/storage-local yet.');
    }
    async getOrCreate(name) {
        ow_1.default(name, ow_1.default.string.nonEmpty);
        const queueDir = path_1.join(this.storageDir, name);
        await fs_extra_1.ensureDir(queueDir);
        const emulator = new request_queue_emulator_1.RequestQueueEmulator({
            queueDir,
            dbConnections: this.dbConnections,
        });
        const queue = emulator.selectOrInsertByName(name);
        queue.id = queue.name;
        return utils_1.purgeNullsFromObject(queue);
    }
}
exports.RequestQueueCollectionClient = RequestQueueCollectionClient;
//# sourceMappingURL=request_queue_collection.js.map