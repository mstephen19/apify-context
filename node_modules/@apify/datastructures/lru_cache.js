"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LruCache = void 0;
const list_dictionary_1 = require("./list_dictionary");
/**
 * Least recently used cache.
 */
class LruCache {
    constructor(options) {
        this.options = options;
        this.listDictionary = new list_dictionary_1.ListDictionary();
        this.maxLength = this.options.maxLength;
        if (typeof options.maxLength !== 'number') {
            throw new Error('Parameter "maxLength" must be a number.');
        }
    }
    /**
     * Gets the number of item in the list.
     */
    length() {
        return this.listDictionary.length();
    }
    /**
     * Get item from Cache and move to last position
     */
    get(key) {
        if (typeof key !== 'string')
            throw new Error('Parameter "key" must be a string.');
        const node = this.listDictionary.dictionary[key];
        if (!node)
            return null;
        // remove item and move it to the end of the list
        this.listDictionary.remove(key);
        this.listDictionary.add(key, node.data);
        return node.data;
    }
    /**
     * Add new item to cache, remove least used item if length exceeds maxLength
     */
    add(key, value) {
        const added = this.listDictionary.add(key, value);
        if (!added)
            return false;
        if (this.length() > this.maxLength) {
            this.listDictionary.removeFirst();
        }
        return true;
    }
    /**
     * Remove item with key
     */
    remove(key) {
        return this.listDictionary.remove(key);
    }
    /**
     * Clear cache
     */
    clear() {
        return this.listDictionary.clear();
    }
}
exports.LruCache = LruCache;
